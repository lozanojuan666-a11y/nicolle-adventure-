<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Aventura de Nicolle - Juego Completo</title>
  <script src="https://cdn.jsdelivr.net/npm/phaser@3/dist/phaser.js"></script>
  <style>
    html, body { margin:0; padding:0; height:100%; background:#111; }
    #game-container { display:flex; justify-content:center; align-items:center; height:100%; }
    canvas { max-width:100%; height:auto; display:block; margin:auto; }
    .help { position:fixed; left:10px; top:10px; color:#fff; font-family:sans-serif; z-index:10; }
  </style>
</head>
<body>
<div id="game-container"></div>
<div class="help">Controles: A/D o Flechas = mover, W/Flecha Arriba = saltar, J = atacar</div>
<script>
class MainScene extends Phaser.Scene{
  constructor(){ super('MainScene'); }
  preload(){ }
  create(){
    this.zoroLives = 7; this.boxCount = 0; this.playerSpeedBoost = 0; this.hasDoubleJump = false; this.gameOver = false;
    this.cameras.main.setBackgroundColor('#87CEEB');
    this.createTextures();
    this.physics.world.setBounds(0,0,4000,600);
    const platforms = this.physics.add.staticGroup();
    platforms.create(2000,590,'ground').setScale(4,1).refreshBody();
    [600,950,1300,1700,2100,2500,2900,3300].forEach((x,i)=>{ platforms.create(x,400-(i%2)*80,'ground'); });
    this.castle = this.add.image(3800,330,'castle').setScale(0.7);
    this.player = this.physics.add.sprite(100,450,'nicolle');
    this.player.setCollideWorldBounds(true); this.player.setBounce(0.1); this.player.body.setSize(24,48); this.player.speed = 200; this.player.jumps = 0;
    this.zoroIcon = this.add.image(60,40,'zoro').setScrollFactor(0).setScale(1.2);
    this.zoroText = this.add.text(80,28,'x'+this.zoroLives,{font:'20px Arial',fill:'#fff'}).setScrollFactor(0);
    this.boxes = this.physics.add.group({allowGravity:false,immovable:true});
    [700,1200,1600,2300,3100].forEach((x,i)=>{ const b = this.boxes.create(x,200 + (i%2)*120,'box'); b.power = Phaser.Math.RND.pick(['life','speed','doublejump']); });
    this.cockroaches = this.physics.add.group();
    for(let i=0;i<30;i++){ const x = Phaser.Math.Between(300,3500); const c = this.cockroaches.create(x,560,'cockroach'); c.setCollideWorldBounds(true); c.setBounce(0.2); c.setVelocityX(Phaser.Math.Between(-80,-40)); }
    this.frog = this.physics.add.sprite(1500,500,'frog'); this.frog.setCollideWorldBounds(true); this.frog.setBounce(1); this.frog.setVelocityX(80);
    this.bee = this.physics.add.sprite(2000,250,'bee'); this.bee.setCollideWorldBounds(true); this.bee.setBounce(1); this.bee.setVelocity(100,40);
    this.dragon = this.physics.add.sprite(3720,280,'dragon'); this.dragon.maxHP=10; this.dragon.hp=10; this.dragon.setImmovable(true); this.dragon.active=false;
    this.swordHits = this.physics.add.group();
    this.physics.add.collider(this.player,platforms);
    this.physics.add.collider(this.cockroaches,platforms);
    this.physics.add.collider(this.frog,platforms);
    this.physics.add.collider(this.bee,platforms);
    this.physics.add.collider(this.dragon,platforms);
    this.physics.add.overlap(this.swordHits,this.cockroaches,(s,c)=>{c.destroy(); s.destroy();});
    this.physics.add.overlap(this.swordHits,this.frog,(s,f)=>{f.disableBody(true,true); s.destroy();});
    this.physics.add.overlap(this.swordHits,this.bee,(s,b)=>{b.disableBody(true,true); s.destroy();});
    this.physics.add.overlap(this.swordHits,this.dragon,(s,d)=>{if(d.active){d.hp--; s.destroy();}});
    this.physics.add.overlap(this.player,this.cockroaches,()=>{this.playerHit(0.2);});
    this.physics.add.overlap(this.player,this.frog,()=>{this.playerHit(1);});
    this.physics.add.overlap(this.player,this.bee,()=>{this.playerHit(1);});
    this.physics.add.overlap(this.player,this.dragon,()=>{this.playerHit(5);});
    this.physics.add.overlap(this.player,this.boxes,(p,b)=>{this.collectBox(b);});
    this.cameras.main.startFollow(this.player,true,0.05,0.05);
    this.cameras.main.setBounds(0,0,4000,600);
    this.cursors = this.input.keyboard.addKeys({left:'A',right:'D',up:'W',attack:'J',left2:Phaser.Input.Keyboard.KeyCodes.LEFT,right2:Phaser.Input.Keyboard.KeyCodes.RIGHT,up2:Phaser.Input.Keyboard.KeyCodes.UP});
    this.boxText = this.add.text(10,60,'Cajas abiertas: 0',{font:'18px Arial',fill:'#fff'}).setScrollFactor(0);
    this.dragonText = this.add.text(10,90,'',{font:'18px Arial',fill:'#fff'}).setScrollFactor(0);
  }
  update(){
    if(this.gameOver) return;
    let left=this.cursors.left.isDown||this.cursors.left2.isDown;
    let right=this.cursors.right.isDown||this.cursors.right2.isDown;
    let up=this.cursors.up.isDown||this.cursors.up2.isDown;
    let attack=Phaser.Input.Keyboard.JustDown(this.cursors.attack);
    const speed=this.player.speed+this.playerSpeedBoost;
    if(left){this.player.setVelocityX(-speed); this.player.flipX=true;} 
    else if(right){this.player.setVelocityX(speed); this.player.flipX=false;}
    else{this.player.setVelocityX(0);}
    if(up){if(this.player.body.touching.down){this.player.setVelocityY(-350); this.player.jumps=1;}
      else if(this.hasDoubleJump&&this.player.jumps<2){this.player.setVelocityY(-320); this.player.jumps++;}}
    if(this.player.body.touching.down) this.player.jumps=0;
    if(attack) this.swingSword();
    if(!this.dragon.active&&this.player.x>3600) this.dragon.active=true;
    if(this.dragon.active){if(this.dragon.hp<=0){this.dragon.destroy(); this.victory();}
    else this.dragonText.setText('Drag√≥n HP: '+this.dragon.hp+'/'+this.dragon.maxHP);}
    this.zoroText.setText('x'+this.zoroLives);
    this.boxText.setText('Cajas abiertas: '+this.boxCount+'/5');
  }
  swingSword(){if(this.lastAttack&&this.time.now-this.lastAttack<400) return; this.lastAttack=this.time.now;
    const dir=this.player.flipX?-1:1; const x=this.player.x+dir*30; const y=this.player.y;
    const s=this.swordHits.create(x,y,'fireball'); s.body.setAllowGravity(false); s.setVelocityX(dir*300);}
  playerHit(damage){if(!this.playerAlive) this.playerAlive=false; this.zoroLives--; if(this.zoroLives>0){this.time.delayedCall(500,()=>{this.playerAlive=true; this.player.setPosition(100,450);});} else{this.gameOver=true; alert('Game Over üò¢'); location.reload();}}
  collectBox(box){switch(box.power){case 'life':this.zoroLives++;break;case 'speed':this.playerSpeedBoost=50;break;case 'doublejump':this.hasDoubleJump=true;break;} box.destroy(); this.boxCount++;}
  victory(){this.gameOver=true; const style={font:'32px Arial',fill:'#FF69B4',align:'center'}; this.add.text(this.player.x-200,250,'¬°Feliz aniversario mi princesa hermosa ‚ù§Ô∏è!',style);}
  createTextures(){const g=this.make.graphics({x:0,y:0,add:false}); g.clear(); g.fillStyle(0x8B4513,1); g.fillRect(0,0,400,32); g.generateTexture('ground',400,32);
    g.clear(); g.fillStyle(0xFFC0CB,1); g.fillRect(8,10,32,40); g.fillStyle(0xFFE4E1,1); g.fillCircle(24,8,8); g.fillStyle(0x000000,1); g.fillRect(20,28,8,4); g.generateTexture('nicolle',48,56);
    g.clear(); g.fillStyle(0x000000,1); g.fillEllipse(12,10,24,16); g.fillStyle(0xFFFFFF,1); g.fillEllipse(18,8,6,6); g.generateTexture('zoro',30,20);
    g.clear(); g.fillStyle(0x6B3E26,1); g.fillEllipse(8,6,16,10); g.generateTexture('cockroach',16,12);
    g.clear(); g.fillStyle(0x4CAF50,1);